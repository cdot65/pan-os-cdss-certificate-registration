name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers workflow on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      # Check out the repository code
      - name: Check out code
        uses: actions/checkout@v4.1.7

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.21.x'

      # Cache Go modules to speed up builds
      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install Dependencies
        run: go mod download

      # Clear module cache (optional)
      - name: Clear module cache
        run: go clean -modcache

      # Ensure all dependencies are tidy
      - name: Tidy Go Module
        run: go mod tidy

      # Build the binary for each OS/architecture
      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -o pan-os-cdss-certificate-registration-${{ matrix.goos }}-${{ matrix.goarch }} ./main.go
          if [ "${{ matrix.goos }}" = "windows" ]; then
            mv pan-os-cdss-certificate-registration-${{ matrix.goos }}-${{ matrix.goarch }} pan-os-cdss-certificate-registration-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          fi

      # Upload the binary artifact for each OS/architecture
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: pan-os-cdss-certificate-registration-${{ matrix.goos }}-${{ matrix.goarch }}
          path: pan-os-cdss-certificate-registration-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download all artifacts from the build job
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      # Create a GitHub release with the uploaded artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            pan-os-cdss-certificate-registration-linux-amd64/pan-os-cdss-certificate-registration-linux-amd64
            pan-os-cdss-certificate-registration-windows-amd64/pan-os-cdss-certificate-registration-windows-amd64.exe
            pan-os-cdss-certificate-registration-darwin-amd64/pan-os-cdss-certificate-registration-darwin-amd64
            pan-os-cdss-certificate-registration-darwin-arm64/pan-os-cdss-certificate-registration-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
