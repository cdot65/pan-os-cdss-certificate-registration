name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers workflow on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]  # Added arm64 support for ARM architecture
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.20'

      - name: Set up cross-compilation environment
        run: |
          echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o cdss-cert-register-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Archive binary
        run: |
          zip cdss-cert-register-${{ matrix.goos }}-${{ matrix.goarch }}.zip cdss-cert-register-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.6
        with:
          name: cdss-cert-register-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cdss-cert-register-${{ matrix.goos }}-${{ matrix.goarch }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: cdss-cert-register-*.zip  # Upload all the generated zip files as release assets
          token: ${{ secrets.GITHUB_TOKEN }}
